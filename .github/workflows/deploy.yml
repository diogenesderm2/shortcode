name: Deploy Shortcode

on:
  push:
    branches: [main, stage, develop]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set deploy target folder
      id: set-folder
      run: |
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then
          echo "TARGET_FOLDER=/var/www/shortcode" >> $GITHUB_ENV
          echo "ENVIRONMENT=production" >> $GITHUB_ENV
        elif [ "${{ github.ref }}" == "refs/heads/stage" ]; then
          echo "TARGET_FOLDER=/var/www/shortcodeStage" >> $GITHUB_ENV
          echo "ENVIRONMENT=stage" >> $GITHUB_ENV
        elif [ "${{ github.ref }}" == "refs/heads/develop" ]; then
          echo "TARGET_FOLDER=/var/www/shortcodeDev" >> $GITHUB_ENV
          echo "ENVIRONMENT=development" >> $GITHUB_ENV
        else
          echo "Branch n√£o mapeada!"
          exit 1
        fi

    - name: Copy project to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "."
        target: "${{ env.TARGET_FOLDER }}"

    - name: Run deploy commands on EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd ${{ env.TARGET_FOLDER }}

          echo "Deploying to ${{ env.ENVIRONMENT }} environment..."

          echo "Installing PHP dependencies..."
          composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev

          echo "Installing Node dependencies..."
          npm ci

          echo "Building frontend..."
          npm run build

          echo "Running Artisan commands..."
          php artisan migrate --force
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

          echo "Setting permissions..."
          sudo chown -R www-data:www-data storage bootstrap/cache
          sudo chmod -R 775 storage bootstrap/cache

          echo "Deploy completed successfully for ${{ env.ENVIRONMENT }}!"  
