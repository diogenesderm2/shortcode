name: Deploy Shortcode

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Instalar dependências PHP
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Instalar dependências Node.js
        run: npm install

      - name: Build frontend
        run: npm run build
  #Realizando os testes
#  test:
#    runs-on: ubuntu-latest
#    needs: build
#    services:
#      mysql:
#        image: mysql:8.0
#        env:
#          MYSQL_ROOT_PASSWORD: root
#          MYSQL_DATABASE: laravel_test
#          MYSQL_USER: laravel
#          MYSQL_PASSWORD: secret
#        ports:
#          - 3306:3306
#        options: >-
#          --health-cmd="mysqladmin ping --silent"
#          --health-interval=10s
#          --health-timeout=5s
#          --health-retries=3
#    steps:
#      - name: Checkout do código
#        uses: actions/checkout@v4
#
#      - name: Instalar dependências PHP
#        run: composer install --no-interaction --prefer-dist --optimize-autoloader
#
#      - name: Copiar .env de exemplo
#        run: cp .env.example .env
#
#      - name: Configurar .env para testes
#        run: |
#          echo "DB_CONNECTION=mysql" >> .env
#          echo "DB_HOST=127.0.0.1" >> .env
#          echo "DB_PORT=3306" >> .env
#          echo "DB_DATABASE=laravel_test" >> .env
#          echo "DB_USERNAME=laravel" >> .env
#          echo "DB_PASSWORD=secret" >> .env
#
#      - name: Gerar chave da aplicação
#        run: php artisan key:generate
#
#      - name: Rodar migrations
#        run: php artisan migrate --force
#
#      - name: Rodar testes
#        run: php artisan test

  #deploy em desenvolvimento
  deploy-development:
    runs-on: ubuntu-latest
    environment:
      name: development
      url: ${{vars.URL}}
    needs: build
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v4

      - name: Instalar dependências PHP
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Instalar dependências Node.js
        run: npm install

      - name: Gerar assets frontend
        run: npm run build

      - name: Shortcode Deployment
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
          ARGS: "-rlgoDzvc --delete --exclude=.env"
          SOURCE: "."
          REMOTE_HOST: ${{secrets.SSH_HOST}}
          REMOTE_USER: ${{secrets.SSH_USER}}
          REMOTE_PORT: ${{vars.REMOTE_PORT}}
          TARGET: "/var/www/shortcodeDev"

  #deploy em stage
  deploy-stage:
    runs-on: ubuntu-latest
    environment:
      name: stage
      url: ${{vars.URL}}
    needs: deploy-development
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v4
      - name: Instalar dependências PHP
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Instalar dependências Node.js
        run: npm install

      - name: Gerar assets frontend
        run: npm run build

      - name: Shortcode Deployment
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
          ARGS: "-rlgoDzvc --delete --exclude=.env"
          SOURCE: "."
          REMOTE_HOST: ${{secrets.SSH_HOST}}
          REMOTE_USER: ${{secrets.SSH_USER}}
          REMOTE_PORT: ${{vars.REMOTE_PORT}}
          TARGET: "/var/www/shortcodeStage"

  #deploy em production
  deploy-production:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{vars.URL}}
    needs: deploy-stage
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v4
      - name: Instalar dependências PHP
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Instalar dependências Node.js
        run: npm install

      - name: Gerar assets frontend
        run: npm run build

      - name: Shortcode Deployment
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
          ARGS: "-rlgoDzvc --delete --exclude=.env"
          SOURCE: "."
          REMOTE_HOST: ${{secrets.SSH_HOST}}
          REMOTE_USER: ${{secrets.SSH_USER}}
          REMOTE_PORT: ${{vars.REMOTE_PORT}}
          TARGET: "/var/www/shortcode"

